name: foodgram

volumes:
  pg-data-production:
    name: foodgram-pg-data-production
  media-volume:
    name: foodgram-media-volume
  static-volume:
    name: foodgram-static-volume

networks:
  default:
    name: foodgram-default

services:
  
  db:
    container_name: foodgram-db
    image: postgres:16-alpine
    restart: always
    env_file: ../.env
    volumes:
      - pg-data-production:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      timeout: 60s
      interval: 5s
      retries: 12
  
  backend:
    container_name: foodgram-backend
    image: ivanjsx/foodgram-backend:latest
    restart: always
    env_file: ../.env
    volumes:
      - media-volume:/media
      - static-volume:/backend_static
    depends_on:
      db:
        condition: service_healthy
  
  frontend:
    container_name: foodgram-frontend
    image: ivanjsx/foodgram-frontend:latest
    restart: on-failure
    command: cp -r /app/build/. /frontend_static
    volumes:
      - static-volume:/frontend_static
  
  gateway:
    container_name: foodgram-gateway
    image: ivanjsx/foodgram-gateway:latest
    restart: always
    ports:
      - 9000:80
    volumes:
      - media-volume:/media
      - static-volume:/static
    depends_on:
      - backend      
